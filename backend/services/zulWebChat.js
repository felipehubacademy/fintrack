import OpenAI from 'openai';
import dotenv from 'dotenv';

dotenv.config();

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

/**
 * ZUL WEB CHAT - Assistente Financeiro para Chat Web
 * 
 * Personalidade: S√°bio Jovem - calmo, claro, curioso e inspirador
 * Tom: Pr√≥ximo, pessoal e respeitoso (muito brasileiro!)
 * Formata√ß√£o: Adequada para interface web (sem Markdown)
 */
class ZulWebChat {
  constructor() {
    // Nada aqui por enquanto
  }

  /**
   * Instru√ß√µes para chat web (assistente financeiro geral)
   */
  getWebChatInstructions(context) {
    const { userName } = context;
    const firstName = userName ? userName.split(' ')[0] : 'voc√™';
    
    return `Voc√™ √© Zul, assistente financeiro do MeuAzul√£o.

PERSONALIDADE:
- S√°bio, sereno e genuinamente prestativo
- Fale como um amigo inteligente ajudando com finan√ßas
- Tom brasileiro, natural e respeitoso
- Seja conciso mas completo

SUA FUN√á√ÉO:
Voc√™ √© um assistente financeiro geral que ajuda com:
- Dicas de controle financeiro
- Explica√ß√µes sobre investimentos
- Orienta√ß√µes sobre or√ßamento
- Conceitos financeiros
- Estrat√©gias de economia
- Planejamento financeiro

REGRAS:
- Responda perguntas financeiras de forma clara e did√°tica
- Use exemplos pr√°ticos quando poss√≠vel
- Seja encorajador e positivo
- Evite dar conselhos de investimento espec√≠ficos (apenas educativos)
- Se n√£o souber algo, seja honesto
- Use emojis ocasionalmente para tornar mais amig√°vel

IMPORTANTE:
- N√ÉO registre despesas (isso √© fun√ß√£o do WhatsApp)
- Foque em educa√ß√£o e orienta√ß√£o financeira
- Seja √∫til e pr√°tico
- Mantenha o tom amig√°vel e profissional

FORMATA√á√ÉO:
- Use formata√ß√£o Markdown normalmente (**negrito**, *it√°lico*)
- Use n√∫meros e s√≠mbolos para listas (1., 2., 3. ou ‚Ä¢)
- O frontend vai converter a formata√ß√£o para HTML

${firstName ? `\nUsu√°rio atual: ${firstName}` : ''}`;
  }

  /**
   * Enviar mensagem para chat web (assistente financeiro geral)
   */
  async sendWebChatMessage(userId, userMessage, context = {}) {
    try {
      console.log('üí¨ [WEB CHAT] Iniciando conversa...');
      
      // Instru√ß√µes espec√≠ficas para chat web
      const systemMessage = this.getWebChatInstructions(context);
      
      // Preparar mensagens para GPT-4
      const messages = [
        {
          role: 'system',
          content: systemMessage
        },
        {
          role: 'user',
          content: userMessage
        }
      ];
      
      // Chamar GPT-4
      const completion = await openai.chat.completions.create({
        model: 'gpt-4o-mini',
        messages: messages,
        temperature: 0.7,
        top_p: 1.0,
        frequency_penalty: 0.1,
        presence_penalty: 0.1,
        max_tokens: 500
      });
      
      const response = completion.choices[0].message.content;
      console.log('üí¨ [WEB CHAT] Resposta gerada');
      
      return response;
      
    } catch (error) {
      console.error('‚ùå [WEB CHAT] Erro:', error);
      throw error;
    }
  }
}

export default ZulWebChat;